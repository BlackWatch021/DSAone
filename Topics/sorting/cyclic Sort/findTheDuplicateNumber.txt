/*
Find The Duplicate Number
https://leetcode.com/problems/find-the-duplicate-number/


Given an array of integers nums containing n + 1 integers where each integer is in the range [1, n] inclusive.

There is only one repeated number in nums, return this repeated number.

You must solve the problem without modifying the array nums and uses only constant extra space.



Example 1:

Input: nums = [1,3,4,2,2]
Output: 2
Example 2:

Input: nums = [3,1,3,4,2]
Output: 3
* */


package com.company.sorting.cyclicSort;

import java.lang.reflect.Array;
import java.util.Arrays;

public class findTheDuplicateNumber {
    public static void main(String[] args) {
        int[] arr={3,1,3,4,2};
        System.out.println(findDuplicate(arr));;
    }
    static int findDuplicate(int[] nums) {
        int i=0;
        while(i<nums.length){
            int correct=nums[i]-1;
            if(nums[i]!=nums[correct]){
                int temp=nums[i];
                nums[i]=nums[correct];
                nums[correct]=temp;
            }
            else{
                i++;
            }
        }
        System.out.println(Arrays.toString((nums)));

        for (int j = 0; j < nums.length; j++) {
            if(nums[j]!=j+1){
                return nums[j];
            }
        }
        return -1;
    }
}
